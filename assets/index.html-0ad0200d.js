const e=JSON.parse('{"key":"v-1692d978","path":"/embedded-system/ble5-stack/","title":"BLE 协议栈 5.4","lang":"zh-CN","frontmatter":{"title":"BLE 协议栈 5.4","date":"2024-01-14T00:00:00.000Z","description":"简介 BLE 协议栈 顶层架构 BLE 由许多层级和功能模块构成，有些是必要的，有些是可选的。协议栈的这些部分分布在两个主要的架构块中，分别是主机（host）和控制器（controller），标准的逻辑接口定义了这两个组件之间的通信方式。 主机通常类似于操作系统。控制器通常是一款系统芯片。然而，并不一定是这样的情况，蓝牙规范并没有规定实现细节。重要的是主机和控制器在架构中充当独立的逻辑容器，可以以某种方式在物理上实现为独立的组件，其间的通信由标准接口定义。这使得蓝牙系统可以由不同制造商的主机和控制器组件组成。","head":[["meta",{"property":"og:url","content":"https://mark-walen.github.io/embedded-system/ble5-stack/"}],["meta",{"property":"og:site_name","content":"蓝芒小栈"}],["meta",{"property":"og:title","content":"BLE 协议栈 5.4"}],["meta",{"property":"og:description","content":"简介 BLE 协议栈 顶层架构 BLE 由许多层级和功能模块构成，有些是必要的，有些是可选的。协议栈的这些部分分布在两个主要的架构块中，分别是主机（host）和控制器（controller），标准的逻辑接口定义了这两个组件之间的通信方式。 主机通常类似于操作系统。控制器通常是一款系统芯片。然而，并不一定是这样的情况，蓝牙规范并没有规定实现细节。重要的是主机和控制器在架构中充当独立的逻辑容器，可以以某种方式在物理上实现为独立的组件，其间的通信由标准接口定义。这使得蓝牙系统可以由不同制造商的主机和控制器组件组成。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mark-walen.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-16T08:37:59.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"BLE 协议栈 5.4"}],["meta",{"property":"article:author","content":"Mark Walen"}],["meta",{"property":"article:published_time","content":"2024-01-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-16T08:37:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"BLE 协议栈 5.4\\",\\"image\\":[\\"https://mark-walen.github.io/\\"],\\"datePublished\\":\\"2024-01-14T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-16T08:37:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mark Walen\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"BLE 协议栈","slug":"ble-协议栈","link":"#ble-协议栈","children":[{"level":3,"title":"顶层架构","slug":"顶层架构","link":"#顶层架构","children":[]},{"level":3,"title":"BLE 层级简介","slug":"ble-层级简介","link":"#ble-层级简介","children":[]}]}],"git":{"createdTime":1682344712000,"updatedTime":1705394279000,"contributors":[{"name":"Blue Vincent","email":"mark_walen@qq.com","commits":1},{"name":"Mark-Walen","email":"mark_walen@qq.com","commits":1}]},"readingTime":{"minutes":3.47,"words":1042},"filePathRelative":"embedded-system/ble5-stack/README.md","localizedDate":"2024年1月14日","excerpt":"<h2> 简介</h2>\\n<h2> BLE 协议栈</h2>\\n<h3> 顶层架构</h3>\\n<p>BLE 由许多层级和功能模块构成，有些是必要的，有些是可选的。协议栈的这些部分分布在两个主要的架构块中，分别是主机（host）和控制器（controller），标准的逻辑接口定义了这两个组件之间的通信方式。</p>\\n<p>主机通常类似于操作系统。控制器通常是一款系统芯片。然而，并不一定是这样的情况，蓝牙规范并没有规定实现细节。重要的是主机和控制器在架构中充当独立的逻辑容器，可以以某种方式在物理上实现为独立的组件，其间的通信由标准接口定义。这使得蓝牙系统可以由不同制造商的主机和控制器组件组成。</p>","autoDesc":true}');export{e as data};
