const e=JSON.parse('{"key":"v-42033206","path":"/embedded-system/stm32/stm32-learning-process.html","title":"STM32 Learning Process","lang":"zh-CN","frontmatter":{"description":"STM32 Learning Process 安装 STM32CubeIDE 使用 STM32CubeIDE 创建一个项目 点击 Toolbar 中的 File，然后将鼠标悬浮在 New 那一项，选择 STM32 Project。 初次创建时，会自动下载相关的 SDK 和一些其他的依赖（stm32cube_fw_f4_v1270、stm32cube_fw_f4_v1271），包括驱动、以及第三方中间件（如 free-rtos）。 选择 MCU：根据自己芯片的特性可以很快地筛选出自己所用的 MCU。下图的左侧边栏是筛选条件，在 Commercial Part Number 输入自己使用的 MCU 型号。 image-20220811003052482 在右侧视图的下面选择自己的 MCU，然后点击 next，输入 Project 名称，点击 FInish，一个 STM32 项目就创建完成了。","head":[["meta",{"property":"og:url","content":"https://mark-walen.github.io/embedded-system/stm32/stm32-learning-process.html"}],["meta",{"property":"og:site_name","content":"蓝芒小栈"}],["meta",{"property":"og:title","content":"STM32 Learning Process"}],["meta",{"property":"og:description","content":"STM32 Learning Process 安装 STM32CubeIDE 使用 STM32CubeIDE 创建一个项目 点击 Toolbar 中的 File，然后将鼠标悬浮在 New 那一项，选择 STM32 Project。 初次创建时，会自动下载相关的 SDK 和一些其他的依赖（stm32cube_fw_f4_v1270、stm32cube_fw_f4_v1271），包括驱动、以及第三方中间件（如 free-rtos）。 选择 MCU：根据自己芯片的特性可以很快地筛选出自己所用的 MCU。下图的左侧边栏是筛选条件，在 Commercial Part Number 输入自己使用的 MCU 型号。 image-20220811003052482 在右侧视图的下面选择自己的 MCU，然后点击 next，输入 Project 名称，点击 FInish，一个 STM32 项目就创建完成了。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-24T13:58:32.000Z"}],["meta",{"property":"article:author","content":"Mark Walen"}],["meta",{"property":"article:modified_time","content":"2023-04-24T13:58:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"STM32 Learning Process\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-24T13:58:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mark Walen\\"}]}"]]},"headers":[{"level":2,"title":"安装 STM32CubeIDE","slug":"安装-stm32cubeide","link":"#安装-stm32cubeide","children":[]},{"level":2,"title":"使用 STM32CubeIDE 创建一个项目","slug":"使用-stm32cubeide-创建一个项目","link":"#使用-stm32cubeide-创建一个项目","children":[{"level":3,"title":"STM32 项目目录结构","slug":"stm32-项目目录结构","link":"#stm32-项目目录结构","children":[]}]},{"level":2,"title":"快速开始","slug":"快速开始","link":"#快速开始","children":[{"level":3,"title":"点亮一个 LED 灯","slug":"点亮一个-led-灯","link":"#点亮一个-led-灯","children":[]}]}],"git":{"createdTime":1682344712000,"updatedTime":1682344712000,"contributors":[{"name":"Blue Vincent","email":"mark_walen@qq.com","commits":1}]},"readingTime":{"minutes":2.93,"words":880},"filePathRelative":"embedded-system/stm32/stm32-learning-process.md","localizedDate":"2023年4月24日","excerpt":"<h1> STM32 Learning Process</h1>\\n<h2> 安装 STM32CubeIDE</h2>\\n<h2> 使用 STM32CubeIDE 创建一个项目</h2>\\n<ol>\\n<li>\\n<p>点击 Toolbar 中的 File，然后将鼠标悬浮在 New 那一项，选择 STM32 Project。</p>\\n<figure><img src=\\"/assets/img/stm32/create_project.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n</li>\\n<li>\\n<p>初次创建时，会自动下载相关的 SDK 和一些其他的依赖（stm32cube_fw_f4_v1270、stm32cube_fw_f4_v1271），包括驱动、以及第三方中间件（如 free-rtos）。</p>\\n</li>\\n<li>\\n<p>选择 MCU：根据自己芯片的特性可以很快地筛选出自己所用的 MCU。下图的左侧边栏是筛选条件，在 Commercial Part Number 输入自己使用的 MCU 型号。</p>\\n<figure><img src=\\"/assets/img/stm32/Select_Board.png\\" alt=\\"image-20220811003052482\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>image-20220811003052482</figcaption></figure>\\n</li>\\n<li>\\n<p>在右侧视图的下面选择自己的 MCU，然后点击 next，输入 Project 名称，点击 FInish，一个 STM32 项目就创建完成了。</p>\\n</li>\\n</ol>","autoDesc":true}');export{e as data};
