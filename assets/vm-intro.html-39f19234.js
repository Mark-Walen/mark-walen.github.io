const t=JSON.parse('{"key":"v-5e56a724","path":"/cas/ostep/virtualization/memory/vm-intro.html","title":"第 13 章 引言：地址空间","lang":"zh-CN","frontmatter":{"title":"第 13 章 引言：地址空间","date":"2024-01-20T00:00:00.000Z","description":"在早期，因为用户的期望并不高, 所以构建计算机系统是件轻松的事。正是那些该死的用户，他们对“易用性”、“高性能”、“可靠性”等的期望，真的导致了所有这些头疼的问题。下次你遇到其中一个计算机用户时，感谢他们引发的所有问题吧。 思维导图 图 13.1 思维导图 早期系统 从内存的角度来看，早期的计算机并没有为用户提供太多的抽象。基本上，机器的物理内存看起来有点像你在图 13.2 中看到的那样。 操作系统是一组例程（实际上是一个库），位于内存中（在这个例子中从物理地址 0 开始），并且会有一个正在运行的程序（一个进程）当前位于物理内存中（在这个例子中从物理地址 64k 开始），并使用其余的内存。这里几乎没有什么幻想，用户对操作系统的期望也不高。在那些日子里，操作系统开发者的生活确实很轻松，不是吗？","head":[["meta",{"property":"og:url","content":"https://mark-walen.github.io/cas/ostep/virtualization/memory/vm-intro.html"}],["meta",{"property":"og:site_name","content":"蓝芒小栈"}],["meta",{"property":"og:title","content":"第 13 章 引言：地址空间"}],["meta",{"property":"og:description","content":"在早期，因为用户的期望并不高, 所以构建计算机系统是件轻松的事。正是那些该死的用户，他们对“易用性”、“高性能”、“可靠性”等的期望，真的导致了所有这些头疼的问题。下次你遇到其中一个计算机用户时，感谢他们引发的所有问题吧。 思维导图 图 13.1 思维导图 早期系统 从内存的角度来看，早期的计算机并没有为用户提供太多的抽象。基本上，机器的物理内存看起来有点像你在图 13.2 中看到的那样。 操作系统是一组例程（实际上是一个库），位于内存中（在这个例子中从物理地址 0 开始），并且会有一个正在运行的程序（一个进程）当前位于物理内存中（在这个例子中从物理地址 64k 开始），并使用其余的内存。这里几乎没有什么幻想，用户对操作系统的期望也不高。在那些日子里，操作系统开发者的生活确实很轻松，不是吗？"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mark-walen.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-21T09:46:11.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"第 13 章 引言：地址空间"}],["meta",{"property":"article:author","content":"Mark Walen"}],["meta",{"property":"article:published_time","content":"2024-01-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-21T09:46:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第 13 章 引言：地址空间\\",\\"image\\":[\\"https://mark-walen.github.io/\\"],\\"datePublished\\":\\"2024-01-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-21T09:46:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mark Walen\\"}]}"]]},"headers":[{"level":2,"title":"思维导图","slug":"思维导图","link":"#思维导图","children":[]},{"level":2,"title":"早期系统","slug":"早期系统","link":"#早期系统","children":[]},{"level":2,"title":"多程序设计和分时系统","slug":"多程序设计和分时系统","link":"#多程序设计和分时系统","children":[]},{"level":2,"title":"地址空间","slug":"地址空间","link":"#地址空间","children":[]},{"level":2,"title":"目标","slug":"目标","link":"#目标","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1705830371000,"updatedTime":1705830371000,"contributors":[{"name":"Mark-Walen","email":"mark_walen@qq.com","commits":1}]},"readingTime":{"minutes":11.71,"words":3514},"filePathRelative":"cas/ostep/virtualization/memory/vm-intro.md","localizedDate":"2024年1月20日","excerpt":"<p>在早期，因为用户的期望并不高, 所以构建计算机系统是件轻松的事。正是那些该死的用户，他们对“易用性”、“高性能”、“可靠性”等的期望，真的导致了所有这些头疼的问题。下次你遇到其中一个计算机用户时，感谢他们引发的所有问题吧。</p>\\n<h2> 思维导图</h2>\\n<figure><figcaption>图 13.1 思维导图</figcaption></figure>\\n<h2> 早期系统</h2>\\n<p>从内存的角度来看，早期的计算机并没有为用户提供太多的抽象。基本上，机器的物理内存看起来有点像你在图 13.2 中看到的那样。</p>\\n<p>操作系统是一组例程（实际上是一个库），位于内存中（在这个例子中从物理地址 0 开始），并且会有一个正在运行的程序（一个进程）当前位于物理内存中（在这个例子中从物理地址 64k 开始），并使用其余的内存。这里几乎没有什么幻想，用户对操作系统的期望也不高。在那些日子里，操作系统开发者的生活确实很轻松，不是吗？</p>","autoDesc":true}');export{t as data};
