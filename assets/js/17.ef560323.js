(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{502:function(t,s,a){"use strict";a.r(s);var e=a(13),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("TI-RTOS 队列模块提供了一个线程安全的单向消息传递模块，以先进先出 (FIFO) 的方式运行。队列通常用于允许高优先级线程将消息传递给低优先级任务以进行延迟处理；因此允许低优先级任务阻塞直到需要运行。")]),t._v(" "),a("p",[t._v("在图 43 中，队列配置为从任务 A 到任务 B 的单向通信。任务 A 将消息“放入”队列，任务 B 从队列中“获取”消息。")]),t._v(" "),a("center",{attrs:{id:"figure-43"}},[a("img",{staticClass:"medium-zoom-image",attrs:{src:"https://dev.ti.com/tirex/explore/content/simplelink_cc2640r2_sdk_5_30_00_03/docs/ble5stack/ble_user_guide/html/_images/fig-queue-messaging-process.jpg",alt:"Semaphore Functionality"}}),a("br"),a("i",[t._v("图 43. 队列消息处理")])]),t._v(" "),a("p",[t._v("在 BLE5-Stack 中，TI-RTOS 队列函数已被抽象为 "),a("code",[t._v("util.c")]),t._v(" 中的函数，请参阅 "),a("a",{attrs:{href:"https://dev.ti.com/tirex/explore/content/simplelink_cc2640r2_sdk_5_30_00_03/docs/tirtos/sysbios/docs/Bios_User_Guide.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("TI-RTOS 内核 (SYS/BIOS) 用户指南"),a("OutboundLink")],1),t._v("中的队列模块文档。"),a("code",[t._v("util.c")]),t._v(" 中的函数将 Queue 模块中的队列与 Event 模块中的事件组合在一起，以在线程之间传递消息。")]),t._v(" "),a("p",[t._v("在 CC2640R2 软件中，ICall 使用来自各自模块的队列和事件在应用程序和堆栈任务之间传递消息。这方面的一个例子可以在 "),a("code",[t._v("SimpleCentral_enqueueMsg()")]),t._v(" 中看到。高优先级任务、Swi 或 Hwi 将消息排队到应用程序任务。当没有其他高优先级线程正在运行时，应用程序任务将在其自己的上下文中处理此消息。")]),t._v(" "),a("p",[a("code",[t._v("util")]),t._v(" 模块包含一组抽象的 TI-RTOS 队列函数，如下所示：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://dev.ti.com/tirex/explore/content/simplelink_cc2640r2_sdk_5_30_00_03/docs/ble5stack/ble_user_guide/doxygen/ble/html/group___util.html#ga1a402aa73798e67c21ea960bb67ed516",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Util_constructQueue()")]),a("OutboundLink")],1),t._v(" 创建队列。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://dev.ti.com/tirex/explore/content/simplelink_cc2640r2_sdk_5_30_00_03/docs/ble5stack/ble_user_guide/doxygen/ble/html/group___util.html#gada1270148b25421486d6a0f6e001a3b5",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Util_enqueueMsg()")]),a("OutboundLink")],1),t._v(" 入队。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://dev.ti.com/tirex/explore/content/simplelink_cc2640r2_sdk_5_30_00_03/docs/ble5stack/ble_user_guide/doxygen/ble/html/group___util.html#ga2119072ce502da984eed8a9dd614da07",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Util_dequeueMsg()")]),a("OutboundLink")],1),t._v(" 出队。")])]),t._v(" "),a("h2",{attrs:{id:"功能示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能示例"}},[t._v("#")]),t._v(" 功能示例")]),t._v(" "),a("p",[a("a",{attrs:{href:"#figure-44"}},[t._v("图 44")]),t._v(" 和"),a("a",{attrs:{href:"#figure-45"}},[t._v("图 45")]),t._v(" 说明了如何使用队列将来自 Hwi 的按钮按下消息排队（到 Board Key 模块中的 Swi）以在任务上下文中进行后处理。此示例取自 BLE5-Stack 中的 simple_central 项目。")]),t._v(" "),a("center",{attrs:{id:"figure-44"}},[a("img",{staticClass:"medium-zoom-image",attrs:{src:"https://dev.ti.com/tirex/explore/content/simplelink_cc2640r2_sdk_5_30_00_03/docs/ble5stack/ble_user_guide/html/_images/plantuml-d2d063751a6f60aa88d8c95dba442896549d0f77.png"}}),a("br"),a("i",[t._v("图 44. 消息入队时序图")])]),t._v(" "),a("p",[t._v("启用中断后，引脚中断可以在 Hwi 上下文中异步发生。为了使中断尽可能短，与中断相关的工作被推迟到任务进行处理。在 BLE5-Stack 中的 simple_central 示例中，引脚中断是通过 Board Key 模块抽象出来的。该模块通过 Swi 回调通知已注册的函数。在这种情况下，SimpleCentral_keyChangeHandler 是注册的回调函数。")]),t._v(" "),a("p",[a("a",{attrs:{href:"#figure-44"}},[t._v("图 44")]),t._v(" 中的步骤 1 显示了按下某个键时对 SimpleCentral_keyChangeHandler 的回调。该事件被放入应用程序的队列中进行处理。")]),t._v(" "),a("center",[a("span",{attrs:{id:"listing-9"}},[t._v("清单 9. 定义 SimpleCentral_keyChangeHandler()")])]),a("br"),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SimpleCentral_keyChangeHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uint8 keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SimpleCentral_enqueueMsg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SC_KEY_CHANGE_EVT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("a",{attrs:{href:"#figure-44"}},[t._v("图 44")]),t._v(" 中的步骤 2 显示了此按键是如何为 simple_central 任务排队的。在这里，内存是通过 "),a("a",{attrs:{href:"https://dev.ti.com/tirex/explore/content/simplelink_cc2640r2_sdk_5_30_00_03/docs/ble5stack/ble_user_guide/doxygen/ble/html/group___i_call.html#ga00ce08b268a246cee700442af6ac10ec",target:"_blank",rel:"noopener noreferrer"}},[t._v("ICall_malloc()"),a("OutboundLink")],1),t._v(" 分配的，因此可以将消息添加到队列中。添加后，"),a("a",{attrs:{href:"https://dev.ti.com/tirex/explore/content/simplelink_cc2640r2_sdk_5_30_00_03/docs/ble5stack/ble_user_guide/doxygen/ble/html/group___util.html#gada1270148b25421486d6a0f6e001a3b5",target:"_blank",rel:"noopener noreferrer"}},[t._v("Util_enqueueMsg()"),a("OutboundLink")],1),t._v(" 将生成一个 UTIL_QUEUE_EVENT_ID 事件以通知应用程序进行处理。")]),t._v(" "),a("center",[a("span",{attrs:{id:"listing-10"}},[t._v("清单 10. 定义 SimpleCentral_enqueueMsg()")])]),a("br"),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SimpleCentral_enqueueMsg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("scEvt_t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pMsg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ICall_malloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("scEvt_t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create dynamic pointer to message.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pMsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    pMsg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("hdr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("event "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    pMsg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("hdr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    pMsg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("pData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enqueue the message.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Util_enqueueMsg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("appMsgQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" syncEvent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint8_t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("pMsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("false"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("center",{attrs:{id:"figure-45"}},[a("img",{staticClass:"medium-zoom-image",attrs:{src:"https://dev.ti.com/tirex/explore/content/simplelink_cc2640r2_sdk_5_30_00_03/docs/ble5stack/ble_user_guide/html/_images/plantuml-258398d03de89f27b5ace3b65194be1d11b2b676.png"}}),a("br"),a("i",[t._v("图 45. 消息入队时序图")])]),t._v(" "),a("p",[a("a",{attrs:{href:"#figure-45"}},[t._v("图 45")]),t._v(" 中的第 3 步，simple_central 应用程序被发布的 "),a("code",[t._v("UTIL_QUEUE_EVENT_ID")]),t._v(" 事件解除阻塞，它继续检查消息是否已放入队列中进行处理。")]),t._v(" "),a("center",[a("span",{attrs:{id:"listing-11"}},[t._v("清单 11. 处理应用消息")])]),a("br"),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If RTOS queue is not empty, process app message")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("events "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" SC_QUEUE_EVT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("scEvt_t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pMsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pMsg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("scEvt_t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Util_dequeueMsg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("appMsgQueue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Process message")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SimpleCentral_processAppMsg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pMsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Free the space from the message")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ICall_free")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pMsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("a",{attrs:{href:"#figure-45"}},[t._v("图 45")]),t._v(" 中的第 4 步，simple_central 应用程序获取出队消息并对其进行处理。")]),t._v(" "),a("center",[a("span",{attrs:{id:"listing-12"}},[t._v("清单 12. 处理按键中断消息")])]),a("br"),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SimpleCentral_processAppMsg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("sbcEvt_t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pMsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pMsg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("hdr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" SC_KEY_CHANGE_EVT"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SimpleCentral_handleKeys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pMsg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("hdr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("a",{attrs:{href:"#figure-45"}},[t._v("图 45")]),t._v(" 中的第 5 步，simple_central 应用程序现在可以释放在步骤 2 中分配的内存。")])],1)}),[],!1,null,null,null);s.default=n.exports}}]);