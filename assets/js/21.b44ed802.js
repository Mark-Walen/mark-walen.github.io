(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{513:function(t,s,e){"use strict";e.r(s);var n=e(13),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"stm32-learning-process"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stm32-learning-process"}},[t._v("#")]),t._v(" STM32 Learning Process")]),t._v(" "),e("h2",{attrs:{id:"安装-stm32cubeide"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-stm32cubeide"}},[t._v("#")]),t._v(" 安装 STM32CubeIDE")]),t._v(" "),e("h2",{attrs:{id:"使用-stm32cubeide-创建一个项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-stm32cubeide-创建一个项目"}},[t._v("#")]),t._v(" 使用 STM32CubeIDE 创建一个项目")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("点击 Toolbar 中的 File，然后将鼠标悬浮在 New 那一项，选择 STM32 Project。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/stm32/create_project.png",alt:""}})])]),t._v(" "),e("li",[e("p",[t._v("初次创建时，会自动下载相关的 SDK 和一些其他的依赖（stm32cube_fw_f4_v1270、stm32cube_fw_f4_v1271），包括驱动、以及第三方中间件（如 free-rtos）。")])]),t._v(" "),e("li",[e("p",[t._v("选择 MCU：根据自己芯片的特性可以很快地筛选出自己所用的 MCU。下图的左侧边栏是筛选条件，在 Commercial Part Number 输入自己使用的 MCU 型号。")]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/stm32/Select_Board.png",alt:"image-20220811003052482"}})])]),t._v(" "),e("li",[e("p",[t._v("在右侧视图的下面选择自己的 MCU，然后点击 next，输入 Project 名称，点击 FInish，一个 STM32 项目就创建完成了。")])])]),t._v(" "),e("h3",{attrs:{id:"stm32-项目目录结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stm32-项目目录结构"}},[t._v("#")]),t._v(" STM32 项目目录结构")]),t._v(" "),e("ol",[e("li",[t._v("STM32 项目目录结构如下")])]),t._v(" "),e("div",{staticClass:"language-path extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("─Test_ADXL346\n    ├─.settings\n    ├─Core\n    │  ├─Inc\n    │  ├─Src\n    │  └─Startup\n    ├─Debug\n    │  ├─Core\n    │  │  ├─Src\n    │  │  └─Startup\n    │  └─Drivers\n    │      └─STM32F4xx_HAL_Driver\n    │          └─Src\n    └─Drivers\n        ├─CMSIS\n        │  ├─Device\n        │  │  └─ST\n        │  │      └─STM32F4xx\n        │  │          ├─Include\n        │  │          └─Source\n        │  │              └─Templates\n        │  └─Include\n        └─STM32F4xx_HAL_Driver\n            ├─Inc\n            │  └─Legacy\n            └─Src\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[t._v("根据自己所了解的情况进行一些简单说明，主要是 Core 文件夹：")]),t._v(" "),e("div",{staticClass:"language-path extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("-─Core\n   ├─Inc\n   │      main.h\n   │      stm32f4xx_hal_conf.h\n   │      stm32f4xx_it.h\n   │\n   ├─Src\n   │      main.c\n   │      stm32f4xx_hal_msp.c\n   │      stm32f4xx_it.c\n   │      syscalls.c\n   │      sysmem.c\n   │      system_stm32f4xx.c\n   │\n   └─Startup\n           startup_stm32f411retx.s\n")])])]),e("ol",[e("li",[t._v("Inc 文件夹是一些头文件目录")]),t._v(" "),e("li",[t._v("Src 文件夹是 .c 文件所在目录，包含了整个程序的启动文件 main.c。")])])]),t._v(" "),e("li",[e("p",[t._v("Drivers 文件夹")]),t._v(" "),e("div",{staticClass:"language-markdown extra-class"},[e("pre",{pre:!0,attrs:{class:"language-markdown"}},[e("code",[t._v("-─Drivers\n   ├─CMSIS\n   │  ├─Device\n   │  │  └─ST\n   │  │      └─STM32F4xx\n   │  │          ├─Include\n   │  │          └─Source\n   │  │              └─Templates\n   │  └─Include\n   └─STM32F4xx_HAL_Driver\n       ├─Inc\n       │  └─Legacy\n       └─Src\n")])])]),e("ol",[e("li",[t._v("STM32F4xx_HAL_Driver/Inc 目录中是程序可能会使用到的驱动的头文件，STM32F4xx_HAL_Driver/Src 为相对应的源文件（.c 文件）。")])])])]),t._v(" "),e("h2",{attrs:{id:"快速开始"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快速开始"}},[t._v("#")]),t._v(" 快速开始")]),t._v(" "),e("h3",{attrs:{id:"点亮一个-led-灯"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#点亮一个-led-灯"}},[t._v("#")]),t._v(" 点亮一个 LED 灯")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("准备工作：查看 Drivers/STM32F4xx_HAL_Driver/Inc 目录下是否存在 "),e("code",[t._v("stm32f4xx_hal_gpio.h")]),t._v(" 驱动文件")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("如果存在则执行下一步")])]),t._v(" "),e("li",[e("p",[t._v("如果没有")]),t._v(" "),e("ol",[e("li",[t._v("从 "),e("code",[t._v("STM32Cube_FW_F4_V1.27.1/Drivers/STM32F4xx_HAL_Driver/Inc")]),t._v(" 目录下找到并添加至项目文件夹"),e("code",[t._v("Drivers/STM32F4xx_HAL_Driver/Inc")]),t._v("中。"),e("mark",[t._v("Tips：")]),t._v(" STM32Cube_FW_F4_V1.27.1 文件夹所在位置如下图所示：在用户根目录的 "),e("code",[t._v("STM32Cube/Repository")]),t._v(" 目录下")])]),t._v(" "),e("p",[e("img",{attrs:{src:"/assets/img/stm32/path.png",alt:""}})]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[t._v("找到启用 GPIO 的配置头文件 "),e("code",[t._v("Cores/Inc/stm32f4xx_hal_conf.h")]),t._v("：")]),t._v(" "),e("p",[t._v("然后检索到如下代码位置，将"),e("code",[t._v("#define HAL_GPIO_MODULE_ENABLED")]),t._v("的注释去掉，或者在定义的末尾直接添加。")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HAL_MODULE_ENABLED")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_ADC_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_CRYP_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_CAN_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_CRC_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_CAN_LEGACY_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_CRYP_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_DAC_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_DCMI_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_DMA2D_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_ETH_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_NAND_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_NOR_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_PCCARD_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_SRAM_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_SDRAM_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_HASH_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HAL_I2C_MODULE_ENABLED")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_I2S_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_IWDG_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_LTDC_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_RNG_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_RTC_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_SAI_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_SD_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_MMC_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_SPI_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_TIM_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HAL_UART_MODULE_ENABLED")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_USART_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_IRDA_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_SMARTCARD_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_SMBUS_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_WWDG_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_PCD_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_HCD_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_DSI_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_QSPI_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_QSPI_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_CEC_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_FMPI2C_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_FMPSMBUS_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_SPDIFRX_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_DFSDM_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* #define HAL_LPTIM_MODULE_ENABLED   */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HAL_GPIO_MODULE_ENABLED")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HAL_EXTI_MODULE_ENABLED")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HAL_DMA_MODULE_ENABLED")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HAL_RCC_MODULE_ENABLED")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HAL_FLASH_MODULE_ENABLED")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HAL_PWR_MODULE_ENABLED")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("HAL_CORTEX_MODULE_ENABLED")])]),t._v("\n")])])])])])]),t._v(" "),e("li",[e("p",[t._v("至此添加驱动的配置就完成了，对于需要使用其他外设，也是如此配置。")])])])]),t._v(" "),e("li",[e("p",[t._v("开始编写代码逻辑")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main.h"')])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 初始化 HAL 库")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_Init")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 现在所使用的板子总共有 5 种 GPIO 总线（A、B、C、D、H），GPIO 引脚命名规则，总线号 + 引脚号。只有开启相总线时钟后，才能使用引脚")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("__HAL_RCC_GPIOA_CLK_ENABLE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    GPIO_InitTypeDef GPIO_InitStructure"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. LED 相关引脚初始化，现在使用的板子 LED 使用的是 PA5 引脚")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 选用 A 总线 5 号引脚")]),t._v("\n    GPIO_InitStructure"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Pin "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_PIN_5"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 选用推挽模式")]),t._v("\n\tGPIO_InitStructure"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Mode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_MODE_OUTPUT_PP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 选择 GPIO 的速度")]),t._v("\n\tGPIO_InitStructure"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Speed "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_SPEED_FREQ_HIGH"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GPIOA 表示选用 GPIO A 总线")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_GPIO_WritePin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO_PIN_5"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO_PIN_SET"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 LED 灯电平拉高，点亮 LED。")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_GPIO_WritePin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOA"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO_PIN_5"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GPIO_PIN_SET"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以下死循环是必要的。")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])}),[],!1,null,null,null);s.default=a.exports}}]);